{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/products/products.component.scss","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/products/products.template.html","webpack:///./src/config.file.ts","webpack:///./src/config.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/login.model.ts","webpack:///./src/services/auth.service.ts","webpack:///./src/services/token.interceptor.ts","webpack:///./src/store/actions/login.actions.ts","webpack:///./src/store/epics.ts","webpack:///./src/store/epics/login.epic.ts","webpack:///./src/store/model.ts","webpack:///./src/store/module.ts","webpack:///./src/store/reducers.ts","webpack:///./src/store/reducers/login.reducer.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ProductsComponent } from './products/products.component'\n\n// store\nimport { StoreModule } from '../store/module'\nimport { LoginEpics } from '../store/epics/login.epic';\nimport { LoginActions } from '../store/actions/login.actions';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'src/services/token.interceptor';\nimport { AuthService } from 'src/services/auth.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst APP_COMMON_MODULES = [\n  BrowserModule,\n  FormsModule,\n  HttpClientModule,\n  StoreModule\n]\n\n@NgModule( {\n  declarations: [ProductsComponent],\n  imports: [...APP_COMMON_MODULES],\n  providers: [\n    LoginEpics,\n    LoginActions,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n  ],\n  bootstrap: [ ProductsComponent ]\n} )\nexport class AppModule { }\n","module.exports = \"\"","import { Component } from '@angular/core';\nimport { dispatch, select } from '@angular-redux/store';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Component( {\n  selector: 'app-products',\n  templateUrl: './products.template.html',\n  styleUrls: [ './products.component.scss' ]\n} )\nexport class ProductsComponent {\n    title = 'product list!'\n}\n","module.exports = \"<div>\\n    {{title}}\\n</div>\"","/**\n * Example config file,\n * replace with your own\n * url configuration json object.\n */\nexport default {\n    \"protocol\": \"https\",\n    \"scheme\": \"Bearer\",\n    \"urlConfig\": {\n        \"version\": \"v1\",\n        \"baseUrl\": \"fluyo.ngrok.io/api\",\n        \"loginEndpoint\": \"auth/token\",\n        \"logoutEndpoint\": \"auth/logout\",\n        \"refreshTokenEndpoint\": \"auth/refresh\"\n    }\n}\n","export const DEFAULT_PROTOCOL = 'https'\nexport const DEFAULT_AUTH_SCHEME = 'Bearer'\n\nexport const config = ( configFile: ConfigFile ): AuthConfig => {\n    return {\n        protocol: configFile.protocol ? configFile.protocol : DEFAULT_PROTOCOL,\n        scheme: configFile.scheme ? configFile.scheme : DEFAULT_AUTH_SCHEME,\n        urlConfig: {\n            baseUrl: configFile.urlConfig.baseUrl,\n            version: configFile.urlConfig.version,\n            loginEndpoint: configFile.urlConfig.loginEndpoint,\n            logoutEndpoint: configFile.urlConfig.logoutEndpoint,\n            refreshTokenEndpoint: configFile.urlConfig.refreshTokenEndpoint\n        }\n    }\n}\n\nexport interface ConfigFile {\n    protocol: string,\n    scheme: string,\n    urlConfig: AuthUrlConfig\n}\nexport interface AuthUrlConfig {\n    baseUrl: string,\n    version: string,\n    loginEndpoint: string,\n    logoutEndpoint: string,\n    refreshTokenEndpoint: string\n}\nexport interface AuthConfig {\n    protocol: string,\n    scheme: string,\n    urlConfig: AuthUrlConfig\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","export interface LogIn {\n    username: string;\n    password: string;\n}\nexport const InitalState: LogIn = {\n    username: '',\n    password: ''\n};\nexport class LogInModel {\n    username;\n    password;\n    constructor(model: LogIn = InitalState) {\n        this.username = model.username;\n        this.password = model.password;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of'\nimport 'rxjs/add/observable/from'\nimport 'rxjs/add/observable/throw'\nimport { JwtInfo } from 'src/store/types';\nimport { LogInModel } from 'src/models/login.model';\nimport { config } from 'src/config';\nimport configFile from 'src/config.file';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class AuthService {\n    constructor ( private http: HttpClient ) { }\n    login ( loginModel: LogInModel ): Observable<JwtInfo> {\n        const { protocol,  urlConfig: { baseUrl, version, loginEndpoint } } = config(configFile)\n        const loginUrl = `${protocol}://${baseUrl}/${version}/${loginEndpoint}`\n        return this.http.post( loginUrl, loginModel )\n            .catch( ( err ) => {\n                return Observable.of(err)\n            } )\n            .map( ( response: any ) => {\n                // add your own jwt decode implementation\n                // and/or error mapping/handling here\n                return response\n            } )\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http';\n\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs/Observable';\nimport { select } from '@angular-redux/store';\nimport { JwtInfo } from 'src/store/types';\n\nimport configFile from 'src/config.file';\nimport { config } from 'src/config';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n    @select( 'login' )\n    loginStore: Observable<JwtInfo>\n    intercept ( request: HttpRequest<any>, next: HttpHandler ): Observable<HttpEvent<any>> {\n        this.loginStore.subscribe( ( jwtInfo: JwtInfo ) => {\n            const { token } = jwtInfo\n            const authConfig = config( configFile )\n            request = request.clone( {\n                setHeaders: {\n                    Authorization: `${ authConfig.scheme } ${ token }`\n                }\n            } )\n        } )\n        return next.handle( request );\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { JwtInfo, ReduxAction } from '../types';\nimport { LogInModel } from 'src/models/login.model';\n\n@Injectable()\nexport class LoginActions {\n  static readonly LOGIN = 'LOGIN/LOGIN'\n  static readonly LOGIN_SUCCESS = 'LOGIN/LOGIN_SUCCESS'\n  static readonly LOGIN_FAIL = 'LOGIN/LOGIN_FAIL'\n  static readonly LOGOUT = 'LOGIN/LOGOUT'\n\n  static login ( model: LogInModel ): ReduxAction<LogInModel> {\n    return {\n      type: LoginActions.LOGIN,\n      payload: model\n    }\n  }\n  static success ( jwtInfo: JwtInfo ): ReduxAction<JwtInfo> {\n    return {\n      type: LoginActions.LOGIN_SUCCESS,\n      payload: jwtInfo\n    }\n  }\n  static failed ( error: any ): ReduxAction<LogInModel> {\n    return {\n      type: LoginActions.LOGIN_FAIL,\n      payload: new LogInModel()\n    }\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { LoginEpics } from './epics/login.epic'\n\n@Injectable()\nexport class Epics {\n  constructor(\n    private loginEpics: LoginEpics\n  ) {}\n\n  public createEpics() {\n    let epics: any[] = []\n    epics = [\n      ...this.loginEpics.createEpics(),\n      ...epics\n    ]\n    return epics\n  }\n}\n","// angular\nimport { Injectable } from '@angular/core'\n\n// redux\nimport { Action, ActionCreator } from 'redux'\nimport { select } from '@angular-redux/store'\nimport { createEpicMiddleware } from 'redux-observable'\n\n// rxjs\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/do'\nimport 'rxjs/add/operator/map'\nimport 'rxjs/add/operator/catch'\nimport 'rxjs/add/operator/concat'\nimport 'rxjs/add/operator/concatMap'\nimport 'rxjs/add/observable/fromPromise'\n\n// app\nimport { LoginActions } from '../actions/login.actions'\nimport { ReduxAction, JwtInfo } from 'src/store/types';\nimport { LogInModel } from 'src/models/login.model';\nimport { AuthService } from 'src/services/auth.service';\n\n@Injectable()\nexport class LoginEpics {\n  constructor(private authService: AuthService) {}\n  createEpics() {\n    return [createEpicMiddleware(this.login)]\n  }\n  login = (action$: any, store: any): Observable<Action> => {\n    return action$.ofType(LoginActions.LOGIN)\n      .concatMap((result: ReduxAction<LogInModel>) => {\n        const { payload } = result\n        return this.authService.login(payload)\n            .map((response: any) => {\n                if ( response.error ) {\n                    return LoginActions.failed(response.error)\n                }\n                return LoginActions.success(response)\n            })\n      })\n  }\n}\n","import { LoginState, JWT_INITIAL_STATE, AUTH_INITIAL_STATE } from './reducers/login.reducer'\n\nexport interface AppState {\n  login: LoginState\n}\nexport const InitialState: AppState = {\n  login: {\n      jwtInfo: JWT_INITIAL_STATE,\n      authenticated: AUTH_INITIAL_STATE.authenticated\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { NgReduxModule, NgRedux, DevToolsExtension } from '@angular-redux/store'\n\n// The top-level reducers and epics that make up our app's logic.\nimport { AppState, InitialState } from './model'\nimport { rootReducer } from './reducers'\nimport { Epics } from './epics'\n\n// redux persist\nimport { persistStore, persistCombineReducers, PersistorOptions, PersistedState } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst STORE_VERSION = 1\n@NgModule( {\n    imports: [ NgReduxModule ],\n    exports: [ NgReduxModule ],\n    providers: [ Epics ]\n} )\nexport class StoreModule {\n    constructor ( ngRedux: NgRedux<AppState>, devTools: DevToolsExtension, epics: Epics ) {\n        const config = { key: 'jwt-auth-sdk', storage, blacklist: [], version: STORE_VERSION }\n        const persistedReducer: any = persistCombineReducers(config, rootReducer)\n        ngRedux.configureStore(\n            persistedReducer,\n            InitialState,\n            [ ...epics.createEpics() ]\n        )\n        persistStore( ngRedux, () => ngRedux.getState() )\n    }\n}\n","import { loginReducer } from './reducers/login.reducer'\nimport { Reducer, AnyAction } from 'redux';\nimport { PersistedState } from 'redux-persist/es/types';\n\nexport const rootReducer: any = {\n  login: loginReducer\n}\n","import { Reducer, AnyAction } from 'redux'\nimport { LoginActions } from '../actions/login.actions'\nimport { JwtInfo } from '../types'\n\nexport interface LoginState {\n    jwtInfo: JwtInfo\n    authenticated: boolean\n}\nexport const AUTH_INITIAL_STATE = {\n    authenticated: false\n}\nexport const JWT_INITIAL_STATE = {\n    token: '',\n    username: '',\n    expired: null,\n    expires: 0\n}\nexport const loginReducer: Reducer<LoginState> = (\n    state: LoginState = { jwtInfo: JWT_INITIAL_STATE, authenticated: AUTH_INITIAL_STATE.authenticated },\n    action: AnyAction\n): LoginState => {\n    switch ( action.type ) {\n        case LoginActions.LOGIN:\n            return { ...state, authenticated: false }\n        case LoginActions.LOGIN_SUCCESS:\n            return { ...state, authenticated: true, jwtInfo: action.payload }\n        case LoginActions.LOGIN_FAIL:\n            return { ...state, authenticated: false, jwtInfo: JWT_INITIAL_STATE }\n        case LoginActions.LOGOUT:\n            return { ...state, authenticated: false, jwtInfo: JWT_INITIAL_STATE }\n        default:\n            return state\n    }\n}\n"],"sourceRoot":""}